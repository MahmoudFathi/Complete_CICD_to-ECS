version: 2.1

jobs:
  install_dependencies:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: 
          name: Install NPM dependencies
          command: npm install
  sonarCloud_analysis:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: 
          name: Install & Run SonarScanner Analysis
          command: |
            export SONAR_SCANNER_VERSION=6.2.1.4610
            export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux-x64
            curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux-x64.zip
            unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            export PATH=$SONAR_SCANNER_HOME/bin:$PATH
            export SONAR_SCANNER_OPTS="-server"
            ls $SONAR_SCANNER_HOME/bin #check if sonar-scanner binary is present here
            sonar-scanner -Dsonar.organization=circlecicd -Dsonar.projectKey=circlecicd_circlecicd01  -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN


  build_scan_push_docker_image:
    docker:
      - image: docker:20.10.7
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Build Docker Image
          command: docker build -t $DOCKERHUB_USERNAME/circlecicd01:latest .
      - run: 
          name: Trivy Scan
          command: |
            docker pull aquasec/trivy:latest
            docker run --rm -v /var/run/docker.sock aquasec/trivy:latest --severity HIGH,CRITICAL image $DOCKERHUB_USERNAME/circlecicd01:latest
      - run:
          name: Checking images locally
          command: docker images
      - run: 
          name: Push Image to DockerHub
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push "$DOCKERHUB_USERNAME/circlecicd01:latest"
  validate_k8s_manifests:
    docker:
      - image: datree/datree
    steps:
      - checkout
      - run:
          name: Validate Kubernetes Manifests with Datree
          command: datree test k8s-manifests/*.yaml

workflows:
  version: 2
  deploy_workflow:
    jobs:
      - install_dependencies
      - sonarCloud_analysis:
          requires:
            - install_dependencies
      - build_scan_push_docker_image:
          requires:
            - sonarCloud_analysis
      - validate_k8s_manifests:
          requires:
            - build_scan_push_docker_image

